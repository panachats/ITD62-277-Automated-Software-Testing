{
	"info": {
		"_postman_id": "704f33dd-5b9f-44ab-b13b-eb0f3534992e",
		"name": "Test Normal",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24982305"
	},
	"item": [
		{
			"name": "test_getUsers",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Test error of getUser\", function () {\r",
							"    pm.expect(jsonData.error).to.eql(false);\r",
							"    //pm.expect(jsonData.data.userID).to.eql(1)\r",
							"});\r",
							"\r",
							"pm.test(\"Test msg of getUser\", function () {\r",
							"    pm.expect(jsonData.msg).to.eql(\"Get users succesfuly.\");\r",
							"    //pm.expect(jsonData.data.userID).to.eql(1)\r",
							"});\r",
							"\r",
							"pm.test(\"Body contains UserID \",() => {\r",
							"pm.expect(pm.response.text()).to.include('\"userID\"');\r",
							"// pm.expect(pm.response.text()).to.include('\"userID\":3');\r",
							"// pm.expect(pm.response.text()).to.include('\"userID\":4,');\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", () => {\r",
							"pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3001/getUsers",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"getUsers"
					]
				}
			},
			"response": []
		},
		{
			"name": "test_getUserByID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							" console.log(jsonData)\r",
							" console.log(Object.keys(jsonData.data).length != 0)\r",
							"// pm.test(\"jsonData is array\", function () {\r",
							"//     Array.isArray(jsonData)\r",
							"// });\r",
							"\r",
							"// pm.test(\"typeof jsonData.forEach === 'function'\", function () {\r",
							"//     typeof jsonData.forEach === 'function'\r",
							"// });\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Test error = false\", function () {\r",
							"    pm.expect(jsonData.error).to.eql(false);\r",
							"});\r",
							"\r",
							"pm.test(\"Test msg = Selected\", function () {\r",
							"    pm.expect(jsonData.msg).to.eql(\"Selected\");\r",
							"});\r",
							"\r",
							"pm.test(\"UserID = 1 username = Abnormal, fname = Bird, lname = Theerat\",() => {\r",
							"pm.expect(pm.response.text()).to.include('\"userID\":1,');\r",
							"pm.expect(pm.response.text()).to.include('username\":\"Abnormal\"');\r",
							"pm.expect(pm.response.text()).to.include('fname\":\"Bird\"');\r",
							"pm.expect(pm.response.text()).to.include('lname\":\"Theerat\"');\r",
							"});\r",
							"\r",
							"pm.test(\"Test data length != 0 {}\",() => {\r",
							"    pm.expect(Object.keys(jsonData.data).length != 0);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"userID\": 1\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3001/getUserByID/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"getUserByID",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "test_newuser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Insert new user\", function () {\r",
							"    pm.expect(jsonData.error).to.eql(false);\r",
							"    pm.expect(jsonData.msg).to.eql(\"inserted\");\r",
							"});\r",
							"\r",
							"pm.test(\"affectedRows = 1\",() => {\r",
							"pm.expect(pm.response.text()).to.include('affectedRows\":1');\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"Xbnj\", \r\n    \"password\": \"1234567890\",\r\n    \"firstname\": \"Senaul\", \r\n    \"lastname\": \"Sabai\", \r\n    \"authority\": \"1\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3001/newuser",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"newuser"
					]
				}
			},
			"response": []
		},
		{
			"name": "test_checkUsername",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json(); // เก็บ res ไว้ในตัวแปร\r",
							"console.log(jsonData)\r",
							"console.log(Object.keys(jsonData.data).length != 0)\r",
							"\r",
							"// การทดสอบสถานการณ์ตอบกลับ\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    // pm.expect(jsonData.status).to.equal(200) // ตรวจ msg ว่าเป็น CanUse รีเปล่า\r",
							"});\r",
							"\r",
							"//Parse ข้อมูลเป็น JSON \r",
							"pm.test(\"Test error of checkUsername\", function () {\r",
							"    pm.expect(jsonData.error).false; // .error คีนฃย์ของข้อมูลที่ import เข้า\r",
							"});\r",
							"\r",
							"pm.test(\"Test msg of checkUsername\", function () {\r",
							"    pm.expect(jsonData.msg).to.eql(\"CanUse\") // ตรวจ msg ว่าเป็น CanUse รีเปล่า\r",
							"});\r",
							"\r",
							"pm.test(\"Test type of data and not empty or not undefined\", () => {\r",
							"    pm.expect(jsonData.data.username).to.be.a('string').and.not.oneOf([undefined, '']);\r",
							"});\r",
							"\r",
							"pm.test(\"Test data length != 0 {}\",() => {\r",
							"    pm.expect(Object.keys(jsonData.data).length != 0);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Body contains string\",() => {\r",
							"    //ทดสอบ response body ที่ได้รับมาจาก request นั้นมี string \"username\" อยู่หรือไม่\r",
							"    pm.expect(pm.response.text()).to.include(\"username\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\":\"Abnormal\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3001/checkUsername",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"checkUsername"
					]
				}
			},
			"response": []
		},
		{
			"name": "test_updateuser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json(); // เก็บ res ไว้ในตัวแปร\r",
							"var body = JSON.parse(pm.request.body.raw)\r",
							"console.log(jsonData)\r",
							"console.log(body)\r",
							"\r",
							"\r",
							"pm.test(\"changedRows = 1 and info == Rows matched: 1  Changed: 1  Warnings: 0\",() => {\r",
							"    pm.expect(pm.response.text()).to.include('info\":\"Rows matched: 1  Changed: 1  Warnings: 0\"');\r",
							"    pm.expect(pm.response.text()).to.include('changedRows\":1');\r",
							"});\r",
							"\r",
							"pm.test(\"userID = 14\",() => {\r",
							"    pm.expect(body.userID).to.eql(14)\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    // pm.expect(jsonData.status).to.equal(200) // ตรวจ msg ว่าเป็น CanUse รีเปล่า\r",
							"});\r",
							"\r",
							"//Parse ข้อมูลเป็น JSON \r",
							"pm.test(\"Test error, msg of updateduser\", function () {\r",
							"    pm.expect(jsonData.error).false; // .error คีนฃย์ของข้อมูลที่ import เข้า\r",
							"    pm.expect(jsonData.msg).to.eql(\"updated\") // ตรวจ msg ว่าเป็น CanUse รีเปล่า\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\":\"teqsหt\",\r\n    \"lastname\":\"test\",\r\n    \"authority\":1,\r\n    \"activeflag\":1,\r\n    \"userID\":14\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3001/updateuser",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"updateuser"
					]
				}
			},
			"response": []
		},
		{
			"name": "test_deleteuser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const body = JSON.parse(pm.request.body.raw);\r",
							"console.log(jsonData)\r",
							"\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							"pm.test(\"userID = 45\", function () {\r",
							"    pm.expect(body.userID).to.eql(45);\r",
							"    console.log(body)\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Test error, msg of deleteuser\",()=>{\r",
							"    pm.expect(jsonData.error).false;\r",
							"    pm.expect(jsonData.msg).to.be.eql('Deleted')\r",
							"})\r",
							"\r",
							"pm.test(\"Test affectedRows = 1\",()=>{\r",
							"    pm.expect(pm.response.text()).to.include('affectedRows\":1,')\r",
							"})\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"userID\":45\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3001/deleteuser",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"deleteuser"
					]
				}
			},
			"response": []
		}
	]
}